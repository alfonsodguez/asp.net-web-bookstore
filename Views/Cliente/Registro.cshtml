@{
    Layout = null;
    Model.ListaDirecciones.Add(new Direccion());
    int _ultimaPos = Model.ListaDirecciones.Count() - 1;
}
@model bookstore.Models.Cliente;
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - AgapeaNetCore_V5</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" />
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
</head>
<body>
        <div class="container">

            <div class="row">
                <div class="col">
                    <img src="~/images/cabecera.png">
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <h2><strong>Registro en agapea.com</strong></h2>
                    <p>
                        Tienes tres opciones para registrarte en Agapea.com. Puedes hacerlo a través de las redes sociales Facebook o Google en 4 segundos.
                        También puedes registrarte con nosotros en menos de 40 segundos. Tan solo rellena el formulario con tus datos.
                    </p>
                    <hr>
                    <p>En ambos casos, recibirás un correo electrónico en tu cuenta con un enlace con el que confirmarás tus datos, y estarás disfrutando de nuestros servicios y ventajas. </p>

                </div>
            </div>
            <div class="row">
                <div class="col">
                    <div asp-validation-summary="All" class="text-danger"></div>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <form asp-controller="Cliente" asp-action="Registro" method="post"> 
                        <div class="card">
                            <div class="card-body">
                                <h5 class="card-title">Datos de Mi Perfil...</h5>
                                <div class="form-row">
                                    <div class="form-group col-md-6">
                                        <label for="usernick"><strong>Usuario (nickname)</strong></label>
                                        <input asp-for="@Model.CredencialesCliente.NickName" type="text" class="form-control" id="usernick" placeholder="escribe aqui tu nick...">
                                        <span class="text-danger" asp-validation-for="@Model.CredencialesCliente.NickName"></span>
                                    </div>

                                    <div class="form-group col-md-6">
                                        <label for="inputEmail"><strong>Correo Electronico</strong></label>
                                        <input asp-for="@Model.CredencialesCliente.Email" type="email" class="form-control" id="inputEmail" placeholder="escribe aqui tu email...">
                                        <span class="text-danger" asp-validation-for="@Model.CredencialesCliente.Email"></span>
                                    </div>
                                </div>
                                <div class="form-row">
                                    <div class="form-group col-md-6">
                                        <label for="inputPassword"><strong>Escribe cual sera tu contraseña</strong></label>
                                        <input asp-for="@Model.CredencialesCliente.Password" type="password" class="form-control" id="inputPassword" placeholder="escribe tu password...">
                                        <span class="text-danger" asp-validation-for="@Model.CredencialesCliente.Password"></span>
                                    </div>
                                    <div class="form-group col-md-6">
                                        <label for="reinputPassword"><strong>Repite la contraseña</strong></label>
                                        <input type="password" class="form-control" id="reinputPassword" placeholder="Password">
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="card mt-3">
                            <div class="card-body">
                                <h5 class="card-title">Datos de Personales...</h5>
                                <div class="form-row">
                                    <div class="form-group col-md-6">
                                        <label for="inputNombre"><strong>Mi Nombre es:</strong></label>
                                        <input asp-for="@Model.Nombre" type="text" class="form-control" id="inputNombre" placeholder="introduce tu nombre...">
                                    </div>
                                    <div class="form-group col-md-6">
                                        <label for="inputApellidos"><strong>Mis Apellidos son:</strong></label>
                                        <input asp-for="@Model.Apellidos" type="text" class="form-control" id="inputApellidos" placeholder="introduce tus apellidos...">
                                    </div>
                                </div>
                                <div class="form-row">
                                    <div class="form-group col-md-6">
                                        <label for="inputNIF"><strong>NIF:</strong></label>
                                        <input asp-for="@Model.NIF" type="text" class="form-control" id="inputNIF" placeholder="introduce tu NIF...">
                                    </div>
                                    <div class="form-group col-md-6">
                                        <label for="inputTelefono"><strong>un telefono de contacto:</strong></label>
                                        <input asp-for="@Model.Telefono" type="text" class="form-control" id="inputTelefono" placeholder="introduce telefono de contacto...">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="inputAddress"><strong>Direccion de envio:</strong></label>
                                    <input asp-for="@Model.ListaDirecciones[_ultimaPos].Calle" type="text" class="form-control" id="inputAddress" placeholder="c/nombre calle, numero, piso-letra">
                                    <span class="text-danger" asp-validation-for="@Model.ListaDirecciones[_ultimaPos].Calle"></span>
                                </div>
                                <div class="form-row">
                                    <div class="form-group col-md-4">
                                        <label for="inputProvincia"><strong>Provincia</strong></label>
                                        <select asp-for="@Model.ListaDirecciones[_ultimaPos].Provincia.NombreProvincia" id="inputProvincia" class="form-control">
                                            <option value="0" selected>Elige provincia...</option>
                                            @{
                                                foreach (Provincia _unaprov in ViewData["ListaProvincias"] as List<Provincia>)
                                                {
                                                    <option value="@_unaprov.CodPro">@_unaprov.NombreProvincia</option>
                                                }
                                            }
                                        </select>
                                        <span class="text-danger" asp-validation-for="@Model.ListaDirecciones[_ultimaPos].Provincia.NombreProvincia"></span>
                                    </div>
                                    <div class="form-group col-md-6">
                                        <label for="inputLocalidad"><strong>Localidad</strong></label>
                                        <select asp-for="@Model.ListaDirecciones[_ultimaPos].Municipio.NombreMunicipio" id="inputLocalidad" class="form-control" disabled>
                                            <option value="0" selected>Elige localidad...</option>
                                        </select>
                                        <span class="text-danger" asp-validation-for="@Model.ListaDirecciones[_ultimaPos].Municipio.NombreMunicipio"></span>
                                    </div>
                                    <div class="form-group col-md-2">
                                        <label for="inputCP"><strong>CP</strong></label>
                                        <input asp-for="@Model.ListaDirecciones[_ultimaPos].CP" type="text" class="form-control" id="inputCP">
                                        <span class="text-danger" asp-validation-for="@Model.ListaDirecciones[_ultimaPos].CP"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="checkCondicionesUso">
                                <label class="form-check-label" for="checkCondicionesUso">
                                    Acepto las Condiciones de uso y nuestra Politica de Cookies
                                </label>
                            </div>
                        </div>
                        <button type="submit" class="btn btn-primary">REGISTRARME</button>
                    </form>
                </div>
            </div>

        </div>
        <script>

            //#region ----------- peticion ajax FETCH -----------------
            /*
            document.getElementById('inputProvincia').addEventListener("change", (evt) => {
                if (evt.target.value != 0) {

                    //------- limpiamos dropdow -------------------
                    Array.from(document.getElementById('inputLocalidad').getElementsByTagName('option'))
                        .filter((option) => option.getAttribute('value') !=0 )
                        .forEach((_option) => _option.remove());

                    //pet. ajax
                    fetch('https://localhost:44311/api/Rest/DevolverMunicipios/?codpro=' + evt.target.value, { method: 'GET' })
                        .then((resultadoMunis) =>
                            resultadoMunis.json()
                        )
                        .then((listaMunis) => listaMunis.forEach((munis) => {

                            document.getElementById('inputLocalidad').disabled = false;

                            var _option = document.createElement('option');
                            _option.innerText = munis.nombreMunicipio;
                            _option.setAttribute('value', munis.codMun);
                            document.getElementById('inputLocalidad').appendChild(_option);
                        }))
                        .catch(function (err) { console.log(err) });
                }
            });
            */
            //#endregion

            $("#inputProvincia").change((evt) => {
                if (evt.target.value != 0) {
                    //------- limpiamos dropdown -------------------
                    const arr = $('#inputLocalidad > option[value != 0]').toArray();
                    $.each(arr, function (index, elemento) {
                        elemento.remove()
                    });
                    $.get('https://localhost:44311/api/Rest/DevolverMunicipios/?codpro=' + evt.target.value, (listamunis) => {
                        $('#inputLocalidad').prop('disabled', false);
                        $.each((listamunis), function (index, muni) {
                            const _option = $("<option>", { 'value': muni.codMun })
                                .html(muni.nombreMunicipio)
                                .appendTo('#inputLocalidad');
                        })
                    });
                 }
            });

            //------------------------ VALIDACIONES en cliente ------------------------------
            const cajaEmail = document.getElementById('inputEmail');
            cajaEmail.addEventListener('blur', validarEmail);
            function validarEmail(ev) {
		let success = true;
		if (ev.target.value == '') {
		    success = false;
		}
		if ( /^.*.*\.(com|es|uk|it|org)$/.test(ev.target.value) == false) {
		    success = false;
		}
		if (success == false) {
		    //borramas etiqueta span en caso de que exista
		    if (ev.target.nextElementSibling != null) {
                       	ev.target.nextElementSibling.remove();
                    }
		    //añadimos etiqueta span
		    const textoError = document.createElement('span');
		    textoError.textContent= '* Campo obligatorio';
		    textoError.setAttribute('style', 'color: red');
		    ev.target.after(textoError);
		}
		else if (success) {
		    //campo bien validado
		    //eliminamos etiqueta span si existe
                    if (ev.target.nextElementSibling != null) {
                       	ev.target.nextElementSibling.remove();
		    }
		}
	    }

            const cajaPassword = document.getElementById('inputPassword');
            cajaPassword.addEventListener('blur', validarPassword);
	    function validarPassword(ev) {
	    	let validated = true
		
	   	const isWhitespace = /^(?=.*\s)/;
	    	if (isWhitespace.test(ev.target.value)) {
		    console.log("La contraseña no debe contener espacios en blanco.");
		    validated = false;
	    	}

	    	const isContainsUppercase = /^(?=.*[A-Z])/;
	    	if (!isContainsUppercase.test(ev.target.value)) {
		    console.log("La contraseña debe tener al menos un caracter en mayuscula.");
		    validated = false;
	    	}

	    	const isContainsLowercase = /^(?=.*[a-z])/;
	    	if (!isContainsLowercase.test(ev.target.value)) {
		    console.log("La contraseña debe tener al menos un carácter en minúscula.");
		    validated = false;
	    	}

	    	const isContainsNumber = /^(?=.*[0-9])/;
                if (!isContainsNumber.test(ev.target.value)) {
                    console.log("La contraseña debe contener al menos un dígito.");
                    validated = false;
                }

	        const isContainsSymbol = /^(?=.*[~`!#$%^&*()--+={}\[\]|\\:;"'<>,.?/_₹])/;
                if (!isContainsSymbol.test(ev.target.value)) {
                    console.log("La contraseña debe contener al menos un símbolo especial.");
                    validated = false;
                }

        	const isValidLength = /^.{8,16}$/;
   	        if (!isValidLength.test(ev.target.value)) {
		     console.log("La contraseña debe tener entre 8 y 16 caracteres.");
	   	     validated = false;
	        }

		if (validated === false) {
                    //si existe etiqueta span la borramos
                    if (ev.target.nextElementSibling != null) {
                        ev.target.nextElementSibling.remove();
                    }
                    //añadimos etiqueta span
		    const textoError = document.createElement('span');
		    textoError.textContent= '* Password incorrecta';
		    textoError.setAttribute('style', 'color: red');
		    ev.target.after(textoError);
		}
	        //comprobamos que no hay etiqueta span
	    	else if(validated) {
                    //si existe etiqueta span la borramos
                    if (ev.target.nextElementSibling != null) {
                        ev.target.nextElementSibling.remove();
                    }
		}
            }
            
            //añadimos un listener a todos los campos
            const cajasTexto = document.getElementsByTagName('input');
            Array.from(cajasTexto).forEach(caja => caja.addEventListener('blur', validarCampos))
            function validarCampos(ev) {
                //validamos campo que provoca el evento 
                if (ev.target.getAttribute('type') === 'text') {
                    //comprobamos si tiene texto
                    if (ev.target.value == "") {
                        //comprobamos si existe etiqueta span
                        if (ev.target.nextElementSibling != null) {
                            ev.target.nextElementSibling.remove();
                        }
                        const textoError = document.createElement('span');
                        textoError.textContent= '* Campo Obligatorio';
                        textoError.setAttribute('style', 'color: red');
                        ev.target.after(textoError);
                    }
                    else if (ev.target.nextElementSibling != null) {
                        //el campo esta bien validado
                        ev.target.nextElementSibling.remove();
                    }
                }
                //compruebo el numero de campos validados
                const numIncorrect = Array
		    .from(cajasTexto)
                    .filter(input=>input.value.toString().length === 0)//<-- aquellos con campos vacios
		    .length
		if (numIncorrect > 0) {
		    //deshabilitamos boton
		    document.getElementById('botonSubmit').disabled = true;
		} else {
		    //habilitamos boton
		    document.getElementById('botonSubmit').disabled = false;
		}
	    };            
        </script>
    </body>
</html>
